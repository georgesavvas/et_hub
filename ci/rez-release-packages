#!/usr/bin/env python
import os
import sys
import argparse
import copy
from shutil import rmtree
from os.path import dirname, join, exists, expanduser


sys.path.append(dirname(__file__))

import ci_utils  # NOQA


def main():
    parser = argparse.ArgumentParser(description="Release pipeline packages")
    parser.add_argument("--force", help="Force release packages.", action="store_true")
    parser.add_argument("--all", help="Force release packages.", action="store_true")
    args = parser.parse_args()

    cmd = "git diff-tree --no-commit-id --name-only " '-r `git log --format="%H" -n 1`'
    changed_files = ci_utils.process_files(cmd)
    cmd = "git log -m -1 --name-only " '--pretty="format:" `git log --format=%H -n 1`'
    merged_files = ci_utils.process_files(cmd)

    # while we over write versions ignore this optimization
    # changed_files = [f for f in changed_files if f.endswith('VERSION')]
    changed_packages = ci_utils.find_internal_packages(changed_files)

    # merged_files = [f for f in merged_files if f.endswith('VERSION')]
    merged_packages = ci_utils.find_internal_packages(merged_files)

    if args.all:
        all_versions_files = ci_utils.process_files("find -wholename '*/*/VERSION'")
        packages = ci_utils.find_internal_packages(all_versions_files)
    else:
        packages = list(set(changed_packages + merged_packages))
    if not packages:
        print("== Nothing to release == ")
        return 0

    print("== about to release the following packages == ")
    print(",".join(packages))
    print("== ")

    if args.force:
        cmd = "inv release --force"
    else:
        cmd = "inv release"

    done, packages = ci_utils.process_until_empty(cmd, packages)
    if not done:
        print("there might be a issues and some packages can't be released")
        remove_releases(packages)
        return 1

    return 0


def remove_releases(packages):
    for path in packages:
        try:
            rmtree("/software/rez/packages/int/{0}".format(path))
        except:
            pass


if __name__ == "__main__":
    sys.exit(main())
